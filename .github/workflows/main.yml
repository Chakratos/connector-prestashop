name: CI
on:
  push:
  pull_request:
    
jobs:
  test-connector:
    runs-on: self-hosted
    env:
      es_api_token: ${{ secrets.ES_API_TOKEN }}
      shop: ${{ secrets.SHOP }}
      es_domain: ${{ secrets.ES_DOMAIN }}
    steps:
     # Runs a set of commands using the runners shell
    - name: Install dependencies
      run: sudo apt install jq -y
      
    - name: Send Container creation request
      run: |
        export CONTAINERID=$(curl --location --request POST "$es_domain/api/containers/test/store" --form "token=$es_api_token" --form "shop=$shop" --form "branch=${GITHUB_REF##*/}")
        echo "::set-env name=CONTAINERID::$CONTAINERID"
      
    - name: Wait 15 Minutes for the tests to be done
      run: sleep 15m
    
    - name: Retrieve Testresults
      run: |
        JSONRESPONSE=$(curl --location --request GET "$es_domain/api/containers/test/$CONTAINERID?token=$es_api_token")
        export SUCCESS=$(echo $JSONRESPONSE | jq -r '.is_successful')
        
        echo $JSONRESPONSE | jq -r '.result' > output.txt
        echo "::set-env name=JSONRESPONSE::$JSONRESPONSE"

    - name: Save Results as artifact
      uses: actions/upload-artifact@v1
      with:
        name: output
        path: output.txt
      
    - name: Fail if needed
      run: |
        if [[ $SUCCESS -eq 0 ]]; then
          exit 1
        fi
